import 'dart:typed_data';

import 'package:cryptography/helpers.dart';
import 'package:proxy/utils/utils.dart';

class TLS {
  List<int> contentType;
  List<int> version;
  List<int> playLoad = [];

  TLS({required this.contentType, required this.version});
}

class HandShake {
  //{{{
  int randomStart = 0;
  int keyShareStart = 0;
  int sessionIDStart = 0;
  int serverNameStart = 0;
  int helloLenStart = 0;
  List<int> res = [];
  String rawStr;

  HandShake(
      {required String random,
      required String keyShare,
      required String serverName,
      required String helloLen,
      required this.rawStr,
      required String sessionID}) {
    res = List<int>.from(rawStr.codeUnits);
    randomStart = indexOfElements(res, random.codeUnits);
    keyShareStart = indexOfElements(res, keyShare.codeUnits);
    serverNameStart = indexOfElements(res, serverName.codeUnits);
    sessionIDStart = indexOfElements(res, sessionID.codeUnits);
    helloLenStart = indexOfElements(res, helloLen.codeUnits);
  }

  void updateHelloLen() {
    var newLen = Uint8List(4)
      ..buffer.asByteData().setUint32(0, res.length, Endian.big);
    res.replaceRange(helloLenStart, helloLenStart + 3, newLen.sublist(1));
  }

  void setServerName(List<int> newServerName) {
    var domainLen = Uint8List(2)
      ..buffer.asByteData().setUint16(0, newServerName.length, Endian.big);
    var extensionLen = Uint8List(2)
      ..buffer.asByteData().setUint16(0, newServerName.length + 5, Endian.big);
    var listLen = Uint8List(2)
      ..buffer.asByteData().setUint16(0, newServerName.length + 3, Endian.big);

    var temp =
        [0, 0] + extensionLen + listLen + [0] + domainLen + newServerName;

    res.replaceRange(serverNameStart, serverNameStart + 32, temp);
  }

  void setRandom(List<int> input) {
    res.replaceRange(randomStart, randomStart + 32, input);
  }

  void setKeyShare(List<int> input) {
    res.replaceRange(keyShareStart, keyShareStart + 32, input);
  }

  void setSessionID(List<int> input) {
    res.replaceRange(sessionIDStart, sessionIDStart + 32, input);
  }

  void addPadding() {
    int paddingLen = 512 - res.length;
    if (paddingLen > 0) {
      var padding = Uint8List(2)
        ..buffer.asByteData().setUint16(0, res.length, Endian.big);
      res += [
            0,
            0x15,
          ] +
          padding;
    }
  }

  List<int> buildHandShake() {
    var len = Uint8List(2)
      ..buffer.asByteData().setUint16(0, res.length, Endian.big);
    updateHelloLen();
    return [0x16, 0x3, 0x3] + len + res;
  }
} //}}}

List<int> buildChangeCipherSpec() {
  //{{{
  return "\x14\x03\x03\x00\x01\x01".codeUnits;
} //}}}

List<int> buildCert({int len = 36}) {
  return buildApplicationData(randomBytes(len));
}

List<int> buildApplicationData(List<int> data) {
  var len = Uint8List(2)
    ..buffer.asByteData().setUint16(0, data.length, Endian.big);
  return [0x17, 0x3, 0x3] + len + data;
}

HandShake buildClientHello() {
  //{{{
  String raw =
      "\x16\x03\x01\x02\x00\x01\x00\x01\xfc\x03\x03\xe3\x2c\xcf\x27\x95"
      "\x18\xa9\x7d\x00\xe3\xdc\x82\x96\x1b\x3e\xb6\xfb\x22\xcf\x7e\xd2"
      "\xb4\xed\x71\x09\x55\xb1\x82\xe4\x0a\x31\x16\x20\x3c\xae\xe0\xce"
      "\xab\x60\xd9\x20\xac\x51\x9e\xc4\xb1\x19\x37\x1b\x6b\xc3\x7e\x74"
      "\x09\xc8\xaa\xcd\xcf\xf5\x72\x67\x97\x98\x7f\xb4\x00\x20\xba\xba"
      "\x13\x01\x13\x02\x13\x03\xc0\x2b\xc0\x2f\xc0\x2c\xc0\x30\xcc\xa9"
      "\xcc\xa8\xc0\x13\xc0\x14\x00\x9c\x00\x9d\x00\x2f\x00\x35\x01\x00"
      "\x01\x93\x9a\x9a\x00\x00\x00\x00\x00\x16\x00\x14\x00\x00\x11\x64"
      "\x73\x73\x30\x2e\x62\x64\x73\x74\x61\x74\x69\x63\x2e\x63\x6f\x6d"
      "\x00\x0b\x00\x02\x01\x00\x00\x05\x00\x05\x01\x00\x00\x00\x00\xff"
      "\x01\x00\x01\x00\x00\x12\x00\x00\x00\x1b\x00\x03\x02\x00\x02\x00"
      "\x0a\x00\x0a\x00\x08\x9a\x9a\x00\x1d\x00\x17\x00\x18\x44\x69\x00"
      "\x05\x00\x03\x02\x68\x32\x00\x0d\x00\x12\x00\x10\x04\x03\x08\x04"
      "\x04\x01\x05\x03\x08\x05\x05\x01\x08\x06\x06\x01\x00\x10\x00\x0e"
      "\x00\x0c\x02\x68\x32\x08\x68\x74\x74\x70\x2f\x31\x2e\x31\x00\x2d"
      "\x00\x02\x01\x01\x00\x17\x00\x00\x00\x23\x00\x00\x00\x33\x00\x2b"
      "\x00\x29\x9a\x9a\x00\x01\x00\x00\x1d\x00\x20\xe0\x8b\xf5\x82\x50"
      "\x23\x3a\x44\xdb\x21\x19\x4d\x54\xf2\xdf\x9f\x02\xd9\x4c\x38\xc6"
      "\xc3\x3d\xc0\xe3\x27\x69\xb4\x2e\x73\x48\x1c\x00\x2b\x00\x07\x06"
      "\x9a\x9a\x03\x04\x03\x03\x4a\x4a\x00\x01\x00\x00\x15\x00\xc6\x00"
      "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
      "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
      "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
      "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
      "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
      "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
      "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
      "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
      "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
      "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
      "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
      "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
      "\x00\x00\x00\x00\x00";

  var random =
      "\xe3\x2c\xcf\x27\x95\x18\xa9\x7d\x00\xe3\xdc\x82\x96\x1b\x3e\xb6"
      "\xfb\x22\xcf\x7e\xd2\xb4\xed\x71\x09\x55\xb1\x82\xe4\x0a\x31\x16";

  var keyShare =
      "\xe0\x8b\xf5\x82\x50\x23\x3a\x44\xdb\x21\x19\x4d\x54\xf2\xdf\x9f"
      "\x02\xd9\x4c\x38\xc6\xc3\x3d\xc0\xe3\x27\x69\xb4\x2e\x73\x48\x1c";

  var sessionID =
      "\x3c\xae\xe0\xce\xab\x60\xd9\x20\xac\x51\x9e\xc4\xb1\x19\x37\x1b"
      "\x6b\xc3\x7e\x74\x09\xc8\xaa\xcd\xcf\xf5\x72\x67\x97\x98\x7f\xb4";

  var sni = "\x00\x00\x00\x16\x00\x14\x00\x00\x11\x64\x73\x73\x30\x2e\x62\x64"
      "\x73\x74\x61\x74\x69\x63\x2e\x63\x6f\x6d";

  var res = HandShake(
      rawStr: raw,
      random: random,
      keyShare: keyShare,
      sessionID: sessionID,
      sni: sni);

  return res;
} //}}}

HandShake buildServerHello() {
  //{{{
  String raw =
      "\x16\x03\x03\x00\x7a\x02\x00\x00\x76\x03\x03\xdc\x96\x3c\x19\xf6"
      "\xa5\x8e\x31\x3c\x24\x77\xe0\x59\xca\x17\x4d\x97\xca\xf6\x45\x1a"
      "\x84\x02\xe3\x45\x9a\x59\x68\xac\xc0\x58\xd7\x20\x3c\xae\xe0\xce"
      "\xab\x60\xd9\x20\xac\x51\x9e\xc4\xb1\x19\x37\x1b\x6b\xc3\x7e\x74"
      "\x09\xc8\xaa\xcd\xcf\xf5\x72\x67\x97\x98\x7f\xb4\x13\x02\x00\x00"
      "\x2e\x00\x2b\x00\x02\x03\x04\x00\x33\x00\x24\x00\x1d\x00\x20\x8c"
      "\x5f\x32\x75\x95\xd7\xfb\x38\x2f\xc3\x8e\x36\x27\x8a\xc1\x88\x0f"
      "\xef\xd7\x45\xb3\xac\x49\x87\x95\x81\x54\x47\x17\xdc\xc0\x21";

  var random =
      "\xdc\x96\x3c\x19\xf6\xa5\x8e\x31\x3c\x24\x77\xe0\x59\xca\x17\x4d"
      "\x97\xca\xf6\x45\x1a\x84\x02\xe3\x45\x9a\x59\x68\xac\xc0\x58\xd7";

  var keyShare =
      "\x8c\x5f\x32\x75\x95\xd7\xfb\x38\x2f\xc3\x8e\x36\x27\x8a\xc1\x88"
      "\x0f\xef\xd7\x45\xb3\xac\x49\x87\x95\x81\x54\x47\x17\xdc\xc0\x21";

  var sessionID =
      "\x3c\xae\xe0\xce\xab\x60\xd9\x20\xac\x51\x9e\xc4\xb1\x19\x37\x1b"
      "\x6b\xc3\x7e\x74\x09\xc8\xaa\xcd\xcf\xf5\x72\x67\x97\x98\x7f\xb4";

  var res = HandShake(
      rawStr: raw,
      random: random,
      keyShare: keyShare,
      sessionID: sessionID,
      sni: "");

  return res;
}//}}}
